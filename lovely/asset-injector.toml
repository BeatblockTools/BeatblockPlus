[manifest]
version = "1.0.0"
dump_lua = true
priority = 2147483647

[[patches]]
[patches.pattern]
target = "main.lua"
pattern = '''bit = require "bit"'''
position = "after"
payload = '''
local lovefs = love.filesystem

modIcons = {}
modIcons.unknown = love.graphics.newImage("Mods/beatblock-plus/unknown.png")

-- files.walk implementation
local function loopFiles(tbl, dir, callback)

	local function recurse(currentTable, currentDir)
		for _, item in ipairs(lovefs.getDirectoryItems(currentDir)) do
			local fullPath = currentDir .. "/" .. item
			if lovefs.getInfo(fullPath, "directory") then
				currentTable[item] = currentTable[item] or {}
				recurse(currentTable[item], fullPath)
			else
				local fileName = item:match("([^/]+)$"):gsub("%..+$", "") -- extract the file name without the directory and extension
				print("injecting " .. fullPath .. "...")
				callback(currentTable, fullPath, fileName)
			end
		end
	end

	recurse(tbl, dir)
end

-- load assets from all mods in the Mods directory
local function loadAssetsFromMods()
	local modsPath = "Mods"
	local success = lovefs.getInfo(modsPath, "directory")

	if success then
		print("Found Mods directory!")

		for _, modName in ipairs(lovefs.getDirectoryItems(modsPath)) do
			local modPath = modsPath .. "/" .. modName
			if lovefs.getInfo(modPath, "directory") then

				-- load the mod icon if it exists
				if lovefs.getInfo(modPath .. "/icon.png", "file") then
					local modIcon = love.graphics.newImage(modPath .. "/icon.png")
					local width, height = modIcon:getDimensions()
					if width ~= 73 or height ~= 33 then
						print("Mod " .. modName .. " has invalid icon size. Mod icons must be 73x33.")
					else
						modIcons[modName] = modIcon
					end
				end

				-- load textures, sounds and other assets from the assets directory of each mod
				local assetsPath = modPath .. "/assets"
				if lovefs.getInfo(assetsPath, "directory") then
					loopFiles(sprites, assetsPath .. "/textures", function(tbl, path, fileName)
						tbl[fileName] = love.graphics.newImage(path)
					end)

					loopFiles(sounds, assetsPath .. "/sounds", function(tbl, path, fileName)
						tbl[fileName] = love.sound.newSoundData(path)
					end)

					loopFiles(shaders, assetsPath .. "/shaders", function(tbl, path, fileName)
						tbl[fileName] = love.graphics.newShader(path)
					end)
				end

			end
		end
	else
		print("Failed to find Mods directory.")
	end
end

loadAssetsFromMods()

function printTable(t, indent)
	indent = indent or 0
	local indentStr = string.rep("  ", indent)

	for k, v in pairs(t) do
		if type(v) == "table" then
			print(indentStr .. tostring(k) .. ":")
			printTable(v, indent + 1)
		else
			print(indentStr .. tostring(k) .. ": " .. tostring(v))
		end
	end
end

print("Sprites:")
printTable(sprites, 3)
print("Sounds:")
printTable(sounds, 3)
print("Shaders:")
printTable(shaders, 3)
print("Mod icons:")
printTable(modIcons, 3)
'''
match_indent = true
times = 1
