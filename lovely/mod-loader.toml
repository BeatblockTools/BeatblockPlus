[manifest]
version = "1.0.0"
dump_lua = true
priority = 2147483647

# bbp module
[[patches]]
[patches.module]
source = "bbp/init.lua"
before = "main.lua"
name = "bbp"

[[patches]]
[patches.module]
source = "bbp/utils.lua"
before = "main.lua"
name = "bbp.utils"

[[patches]]
[patches.module]
source = "bbp/mod-loader.lua"
before = "main.lua"
name = "bbp.modloader"

[[patches]]
[patches.pattern]
target = "main.lua"
pattern = "function love.load()"
position = "after"
payload = '''bbp = require("bbp")'''
match_indent = true

# load mods near the end of love.load()
[[patches]]
[patches.pattern]
target = "main.lua"
pattern = "cs = bs.load(project.initState)"
position = "before"
payload = '''bbp.modloader.loadMods()'''
match_indent = true

# handle error and allow custom path
[[patches]]
[patches.pattern]
target = "lib/basestate.lua"
pattern = '''
function basestate.new(filename,name)
  name = name or filename
  basestate.states[name] = love.filesystem.load("states/" .. filename .. ".lua") -- this is a bad idea
  print("made state ".. name)
end
'''
position = "at"
payload = '''
function basestate.new(filename, name)
	name = name or filename
	basestate.fromPath(name, "states/" .. filename .. ".lua")
end

function basestate.fromPath(name, path)
	local source = path or ("states/" .. name .. ".lua")
	local errormsg
	basestate.states[name], errormsg = love.filesystem.load(source)
	if errormsg then
		print("[BB+] couldn't load state " .. name .. ". Error: " .. errormsg)
	else
		print("[BB+] made state " .. name)
	end
end
'''
match_indent = true

# add menu button
[[patches]]
[patches.pattern]
target = "states/Menu.lua"
pattern = "self.mainMenu:addOption('credits',function()"
position = "before"
payload = '''
self.mainMenu:addOption('Mods', function()
	cs = bs.load('Mods')
	self.menuMusicManager:clearOnBeatHooks()
	cs.menuMusicManager = self.menuMusicManager
	cs:init()
end, 17 * 3, nil, sprites.menu.mods)

for i = 1, 4 do
	self.mainMenu.options.main[i].y = self.mainMenu.options.main[i].y - 17
end
'''
match_indent = true
