[manifest]
version = "1.0.0"
dump_lua = true
priority = 2147483647

[[patches]]
[patches.copy]
target = "main.lua"
position = "prepend"
sources = ["mod-loader.lua"]

# load mods near the end of love.load()
[[patches]]
[patches.pattern]
target = "main.lua"
pattern = "bit = require \"bit\""
position = "before"
payload = "loadMods()"
match_indent = true

# handle error and allow custom path in basestate.new()
[[patches]]
[patches.pattern]
target = "lib/basestate.lua"
pattern = '''
function basestate.new(name)
  basestate.states[name] = love.filesystem.load("states/" .. name .. ".lua") -- this is a bad idea
  print("made state ".. name)
end
'''
position = "at"
payload = '''
function basestate.new(name, dir)
	local source = dir or ("states/" .. name .. ".lua")
	basestate.states[name], error = love.filesystem.load(source)
	if error then
		print("[BB+] couldn't load state " .. name .. ". Error: " .. error)
	else
		print("[BB+] made state " .. name)
	end
end
'''
match_indent = true

# add menu button
[[patches]]
[patches.pattern]
target = "states/Menu.lua"
pattern = "self.mainMenu:setSelection(1)"
position = "after"
payload = '''
self.modMenu = em.init('OptionsList', { allowInput = true, x = 30, y = 234 })

self.modMenu:addOption('Mods', function()
	cs = bs.load('Mods')
	self.menuMusicManager:clearOnBeatHooks()
	cs.menuMusicManager = self.menuMusicManager
	cs:init()
end, 17*5)

self.modMenu:setSelection(1)
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/Menu.lua"
pattern = "st:setUpdate(function(self,dt)"
position = "after"
payload = '''
if self.modMenu then
	self.modMenu:update()
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/Menu.lua"
pattern = "self.mainMenu:draw(0 + self.x * project.res.cx, 200)"
position = "after"
payload = '''
self.modMenu:draw(-270 + self.x * project.res.cx, 234)
'''
match_indent = true